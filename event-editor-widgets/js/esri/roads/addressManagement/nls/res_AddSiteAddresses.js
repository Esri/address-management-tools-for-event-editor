define({root:{
    title: "Add Site Addresses",
    FirstPage: "First Page",
    PreviousPage: "Previous Page",
    NextPage: "Next Page",
    LastPage: "Last Page",
    selectBlockRangeTooltip: "Select Block Range",
    addSiteAddressTooltip: "Add Site Address",
    addGenericSiteAddressTooltip: "Add Site Address without Block Range",
    genericBlockRangeLabel:"No associated block range",
    genericSiteAddressLabel:"Please provide an address number",
    selectSiteAddressTooltip: "Select Site Address",
    deleteSiteAddressTooltip:"Delete Site Address",
    selectBlockRange:"Select Block Range",
    prorateAddress: "Prorate Address Number",
    blockRangeFormLabel:"Block Range",
    blockRangeIdLabel: "ID:",
    locationFromLabel: "From:",
    locationToLabel: "To:",
    selectLocationTooltip: "Select Intersection",
    newEdit: "New Edit",
    nextEdit: "Next Edit",
    save: "Save",
    cancel: "Cancel",
    flipParity: "Flip Parity",
    previousPanel: "&lt; Back",
    nextPanel: "Next &gt;",
    goToNextMeasureOnSave: "Go to next measure upon save",
    networkItem: "${0} (${1})",
    routeIdLabel: "Route:",
    chooseRouteMenuItem: "Choose Route",
	chooseRedlineMenuItem: "Choose Redline",
    selectedRoutesMenuItem: "Selected Routes",
    highlightedRoutesMenuItem: "Highlighted Routes",
    selectRouteTooltip: "Select a Block Range",
    fromMeasureFormLabel: "From",
    toMeasureFormLabel: "To",
    dateFormLabel: "Dates",
    fromDateLabel: "Start Date:",
    toDateLabel: "End Date:",
    useRouteStartDateLabel: "Use route start date",
    useRouteEndDateLabel: "Use route end date",
    routeStart: "Route start",
    routeEnd: "Route end",
    retireOverlapsLabel: "Retire overlaps",
    mergeOverlapsLabel: "Merge coincident events",
    preventInvalidMeasuresLabel: "Prevent measures not on route",
    showNetworkNamesLabel: "Show network names",
    showLayerNamesLabel: "Show layer names",
    networkColumn: "Network",
    layerColumn: "Layer",
    attributeColumn: "Attribute",
    valueColumn: "Value",
    populateAttributes: "Copy Attribute Values",
    closeWarning:"There are unsaved changes in the widget. Do you want to close?",
    cancelWarning: "There are unsaved changes in the widget. Do you want cancel?",
    validation: {
        enterNumber: "Please enter a number.",
        enterNumberWithoutDecimal: "Please enter a number without any decimal.",
        enterStringLengthSingular: "Please enter at most ${0} character.",
        enterStringLengthPlural: "Please enter at most ${0} characters."
    },
    error: {
        addressNumberError: "Please enter a value between ${0} and ${1}",
        correctErrors: "Please correct the highlighted attribute errors before saving.",
        invalidRouteId: "Please enter a route ID.",
        invalidRouteSelection: "Please select routes.",
        invalidNumericRouteId: "Please enter a valid numeric route ID.",
        invalidRouteResult: "The route could not be located. Please choose a valid route.",
        missingMeasures: "Please define the From and To measures.",
        invalidFromMeasure: "Please define a valid From measure.",
        invalidToMeasure: "Please define a valid To measure.",
        invalidFromToDates: "The End Date must occur after the Start Date.",
        routeMeasuresNull: "The route does not have measure values defined or the measures are invalid.",
        measuresNotTranslatableNoResults: "The measure values could not be translated across networks (LRMs).  There are no matching routes in the target network.",
        measureValidationError: "Unable to validate the measure values on the selected route.",
        measureTranslationError: "Unable to translate the measure values across networks.",
        noIncludedLayers: "Please include at least one event layer in the edit set.",
        saveError: "There was an error while saving the event record(s).\n\nDetail: ${0}",
        queryError: "Unable to perform the map query.",
        identifyError: "No attributes could be found.",
        getFeaturesError: "There was an error while getting the route information.",
        calculateMeasuresError: "Unable to get measures for all of the routes.",
        checkLocksError: "Unable to check locks for all of the routes.",
        noReferentMethodLayerName: "The point feature class you are offsetting from",
        noReferentMethod: "${0} was not found in the list of coded value domains for the dReferentMethod domain in your geodatabase.  In order to save an event offset from this point feature class, add a code and description for the point feature class to the list, reload the instance, and then add your event."
    }
}});
